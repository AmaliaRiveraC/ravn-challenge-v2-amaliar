{"version":3,"sources":["components/AppBar.js","components/Loading.js","components/People.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","component","variant","Box","textAlign","m","CircularProgressWithLabel","props","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","color","Math","round","value","CircularStatic","React","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","People","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","id","type","name","specie","homeworld","DATA_BASE","gql","App","useQuery","loading","error","data","Object","keys","people","map","person","species","homeWorld","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea653494.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar,\r\n        Toolbar,\r\n        Typography,\r\n        Box }     from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar  position=\"static\">\r\n        <Toolbar >\r\n            <Typography component=\"div\" variant=\"h6\" className={classes.title}>\r\n                <Box textAlign=\"center\" m={1}>\r\n                    People of Star Wars\r\n                </Box>\r\n            </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function CircularStatic() {\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\r\n    }, 800);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return <CircularProgressWithLabel value={progress} />;\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function People(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}> \r\n      <Accordion TransitionProps={{ unmountOnExit: true }} >\r\n        <AccordionSummary\r\n          expandIcon={ <ExpandMoreIcon  />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"    \r\n        > \r\n          <Typography  className={classes.heading} type='h1' >{props.name} </Typography>\r\n          <Typography fontSize={8} className={classes.secondaryHeading}> {props.specie}  from {props.homeworld}</Typography>\r\n        </AccordionSummary>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport ButtonAppBar from './components/AppBar';\r\nimport Loading from './components/Loading'\r\nimport People from './components/People';\r\n\r\nconst DATA_BASE = gql`{\r\n\tallPeople{\r\n    people {\r\n      id\r\n      name\r\n      birthYear\r\n      eyeColor\r\n      hairColor\r\n      skinColor\r\n      species {\r\n        name\r\n        id\r\n      }\r\n      homeworld {\r\n        name\r\n        id\r\n      }\r\n      vehicleConnection {\r\n        edges {\r\n          node {\r\n            name\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nfunction hasSpecies(specie){\r\n  if(specie != null) {\r\n    return <span key={specie.id}> {specie.name} </span>\r\n  } else {\r\n    return ' ';\r\n  }\r\n}\r\n\r\nfunction hasHomeWorld(homeWorld){\r\n  if(homeWorld != null) {\r\n    return <span key={homeWorld.id}> {homeWorld.name} </span>\r\n  } else {\r\n    return ' '\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const { loading, error, data} = useQuery(DATA_BASE);\r\n  if (error) return <p>Failed to load data</p>\r\n  return (\r\n\r\n    < ><ButtonAppBar color=\"primary\" />\r\n      <div >{ loading ? <Loading/> : data[Object.keys(data)].people.map(person => {\r\n      return <div key={person.id}>\r\n        <People {...person}  specie={hasSpecies(person.species)} homeworld={hasHomeWorld(person.homeworld)} />\r\n        </div>}\r\n        ) }</div>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  HttpLink,\r\n  InMemoryCache\r\n\r\n} from '@apollo/client';\r\nimport App from './App';\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: new HttpLink({\r\n    uri: 'https://amaliariverac.github.io/ravn-challenge-v2-amaliar/'\r\n  })\r\n})\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}